plugins {
    id 'java-platform'
    id 'maven-publish'
    id "com.jfrog.artifactory" version '4.15.1'
}

ext {
    sharedDir           = file('shared')

    cradleVersion       = '1.7.0'

    slf4jVersion        = '1.7.30'
    grpcVersion         = '1.32.1'
    protobufVersion     = '3.13.0'
    jacksonVersion      = '2.11.2'
    prometheusVersion   = '0.9.0'
}

group = 'com.exactpro.th2'
version = release_version

repositories {
    jcenter()
}

dependencies {
    constraints {
        // Libraries
        api('com.exactpro.th2:common:2.3.3')
        api('com.exactpro.th2:sailfish-utils:2.1.0')
        api('com.exactpro.th2:check1:2.2.0')
        api('com.exactpro.th2:check2:2.1.0')
        api('com.exactpro.th2:store-common:2.4.1')
        api('com.exactpro.th2:sim:2.2.0')

        api("com.rabbitmq:amqp-client:5.9.0")
        api("com.datastax.cassandra:cassandra-driver-core:3.6.0")

        api("com.exactpro.cradle:cradle-cassandra:${cradleVersion}")
        api("com.exactpro.cradle:cradle-core:${cradleVersion}")

        api("com.fasterxml.jackson.core:jackson-core:${jacksonVersion}")
        api("com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}")
        api("com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}")
        api("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}")
        api("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}")
        api("com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonVersion}")

        api("org.jetbrains:annotations:20.0.0")

        api("org.apache.commons:commons-lang3:3.8.1")

        api("com.google.guava:guava:29.0-jre")

        api("com.google.protobuf:protobuf-java-util:${protobufVersion}")
        api("com.google.protobuf:protoc:${protobufVersion}")
        api("io.grpc:grpc-protobuf:${grpcVersion}")
        api("io.grpc:grpc-stub:${grpcVersion}")
        api("io.grpc:grpc-core:${grpcVersion}")
        api("io.grpc:grpc-netty:${grpcVersion}")
        api("io.grpc:protoc-gen-grpc-java:${grpcVersion}")

        api("org.slf4j:slf4j-api:${slf4jVersion}")
        api("org.slf4j:slf4j-log4j12:${slf4jVersion}")

        // Prometheus FIXME: remove when we have a facade in common
        api("io.prometheus:simpleclient:${prometheusVersion}")
        api("io.prometheus:simpleclient_hotspot:${prometheusVersion}")
        api("io.prometheus:simpleclient_httpserver:${prometheusVersion}")

        // gRPC libraries
        api('com.exactpro.th2:grpc-service-generator:2.0.5')

        api('com.exactpro.th2:grpc-common:2.2.0')
        api('com.exactpro.th2:grpc-act-template:2.1.0')
        api('com.exactpro.th2:grpc-util:2.2.2')
        api('com.exactpro.th2:grpc-check1:2.1.2')
        api('com.exactpro.th2:grpc-sim:2.1.2')
        api('com.exactpro.th2:grpc-sim-template:2.1.2')
        api('com.exactpro.th2:grpc-hand:2.0.2')

        api('com.exactpro.th2:grpc-estore:2.0.15') // deprecated
    }
}

publishing {
    publishing {
        publications {
            th2Platform(MavenPublication) {
                from components.javaPlatform
            }
        }
    }

    repositories {
        repositories {
            maven {
                name = 'localRepo'
                url = sharedDir
            }
        }
    }
}

artifactory {
    publish {
        contextUrl = "${artifactory_url}"
        repository {
            repoKey = "${artifactory_deploy_repo_key}" // The Artifactory repository key to publish to
            username = "${artifactory_user}" // The publisher user name
            password = "${artifactory_password}" // The publisher password
        }
        defaults {
            // Reference to Gradle publications defined in the build script.
            // This is how we tell the Artifactory Plugin which artifacts should be
            // published to Artifactory.
            publications('th2Platform')
            publishArtifacts = true
            publishBuildInfo = true
            // Properties to be attached to the published artifacts.
            publishPom = true
        }
    }
}
